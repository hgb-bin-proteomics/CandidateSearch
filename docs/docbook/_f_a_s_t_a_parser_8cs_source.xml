<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__f_a_s_t_a_parser_8cs_source" xml:lang="en-US">
<title>FASTAParser.cs</title>
<indexterm><primary>amanda/FASTAParser.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Concurrent;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>System.Text.RegularExpressions;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>System.Text;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis>MessagePack;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_candidate_search_1_1util">CandidateSearch.util</link>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00006"/>00006 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_m_s_a_m_a_n_d_a___c_h_e_m_i_c_a_l_u_t_i_l_s">MSAMANDA_CHEMICALUTILS</link>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00007"/>00007 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00008"/><link linkend="_namespace_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r">00008</link> <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r">MSAMANDA_FASTAPARSER</link>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00009"/>00009 {
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00010"/><link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_f_a_s_t_a_parser">00010</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_f_a_s_t_a_parser">FASTAParser</link>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;List&lt;Peptide&gt;&#32;DigestFasta(<emphasis role="keywordtype">string</emphasis>&#32;fastaFileName,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_candidate_search_1_1util_1_1_settings">Settings</link>&#32;settings,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;generateDecoys&#32;=&#32;<emphasis role="keyword">false</emphasis>,&#32;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;coreUsage&#32;=&#32;0.75)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;trypsin&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_enzyme">Enzyme</link>();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trypsin.Name&#32;=&#32;<emphasis role="stringliteral">&quot;Trypsin&quot;</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trypsin.CleavageSites&#32;=&#32;<emphasis role="stringliteral">&quot;KR&quot;</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trypsin.CleavageInhibitors&#32;=&#32;<emphasis role="stringliteral">&quot;P&quot;</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trypsin.Specificity&#32;=&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_enzyme">Enzyme</link>.CLEAVAGE_SPECIFICITY.FULL;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trypsin.Offset&#32;=&#32;1;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00023"/>00023 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;proteins&#32;=&#32;ReadInFasta(fastaFileName,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00025"/>00025 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;peptides&#32;=&#32;DigestProteins(proteins,&#32;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trypsin,&#32;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;settings,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>,&#32;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;coreUsage);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00031"/>00031 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(generateDecoys)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;decoyProteins&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;DBProtein&gt;();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;protein&#32;<emphasis role="keywordflow">in</emphasis>&#32;proteins)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;decoySequence&#32;=&#32;ReverseSequence(protein.Sequence);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;decoyProtein&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_protein">DBProtein</link>(protein.DbProtRef.ProtIdentifier,&#32;-protein.DbProtRef.MappingId,&#32;decoySequence,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;decoyProteins.Add(decoyProtein);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00041"/>00041 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;decoyPeptides&#32;=&#32;DigestProteins(decoyProteins,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trypsin,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;settings,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">true</emphasis>,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;coreUsage);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00047"/>00047 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;peptides.AddRange(decoyPeptides);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00050"/>00050 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;peptides;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00053"/>00053 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;ReverseSequence(<emphasis role="keywordtype">string</emphasis>&#32;seq)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>[]&#32;array&#32;=&#32;seq.ToCharArray();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Array.Reverse(array);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;String(array);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00060"/>00060 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;List&lt;Peptide&gt;&#32;DigestProteins(List&lt;DBProtein&gt;&#32;proteins,&#32;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_enzyme">Enzyme</link>&#32;enzyme,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_candidate_search_1_1util_1_1_settings">Settings</link>&#32;settings,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isDecoy,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;coreUsage)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;opts&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ParallelOptions&#32;{&#32;MaxDegreeOfParallelism&#32;=&#32;(int)&#32;Math.Ceiling(Environment.ProcessorCount&#32;*&#32;coreUsage)&#32;};
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;concurrentPeptideList&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ConcurrentBag&lt;List&lt;DBPeptide&gt;&gt;();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Parallel.ForEach(proteins,&#32;opts,&#32;(protein)&#32;=&gt;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;digester&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_protein_digester">ProteinDigester</link>(enzyme,&#32;settings.<link linkend="_class_candidate_search_1_1util_1_1_settings_1a00a142b1e6640660be062ffa36223d4a">MAX_CLEAVAGES</link>,&#32;<emphasis role="keyword">true</emphasis>,&#32;settings.<link linkend="_class_candidate_search_1_1util_1_1_settings_1a909e8315b369449767cbea111ce0c02e">MIN_PEP_LENGTH</link>,&#32;settings.<link linkend="_class_candidate_search_1_1util_1_1_settings_1a9808400ce97d1831df67e5b88e4a11c2">MAX_PEP_LENGTH</link>,&#32;protein);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;concurrentPeptideList.Add(digester.DigestProteinIntoList());
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00073"/>00073 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;peptideList&#32;=&#32;concurrentPeptideList.SelectMany(x&#32;=&gt;&#32;x).ToList();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;massToPeptides&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_digester_d_b">DigesterDB</link>();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HelperMethods.MergeToDBDictionaries(peptideList,&#32;ref&#32;massToPeptides,&#32;opts);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00077"/>00077 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;peptides&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Peptide&gt;();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;item&#32;<emphasis role="keywordflow">in</emphasis>&#32;massToPeptides.DbPeptidesDictMassKey)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;currentPeptides&#32;=&#32;item.Value;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;peptide&#32;<emphasis role="keywordflow">in</emphasis>&#32;currentPeptides)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;peptidoforms&#32;=&#32;GetPeptidoforms(peptide,&#32;settings,&#32;isDecoy);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;peptides.AddRange(peptidoforms);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00088"/>00088 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;peptides;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00091"/>00091 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;List&lt;Peptide&gt;&#32;GetPeptidoforms(<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_peptide">DBPeptide</link>&#32;dbPeptide,&#32;<link linkend="_class_candidate_search_1_1util_1_1_settings">Settings</link>&#32;settings,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isDecoy)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;peptides&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Peptide&gt;();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;mods&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;int,&#32;double&gt;();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00096"/>00096 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(settings.<link linkend="_class_candidate_search_1_1util_1_1_settings_1a255ab023ca918fb6799dd3fb6a218f14">FIXED_MODIFICATIONS</link>.Count&#32;&gt;&#32;0)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;dbPeptide.Sequence.Length;&#32;i++)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(settings.<link linkend="_class_candidate_search_1_1util_1_1_settings_1a255ab023ca918fb6799dd3fb6a218f14">FIXED_MODIFICATIONS</link>.ContainsKey(dbPeptide.Sequence[i].ToString()))
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mods.Add(i,&#32;settings.<link linkend="_class_candidate_search_1_1util_1_1_settings_1a255ab023ca918fb6799dd3fb6a218f14">FIXED_MODIFICATIONS</link>[dbPeptide.Sequence[i].ToString()]);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00107"/>00107 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;peptide&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_candidate_search_1_1util_1_1_peptide">Peptide</link>(dbPeptide.Sequence,&#32;dbPeptide.Mass,&#32;mods,&#32;settings,&#32;isDecoy);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;peptides.Add(peptide);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00110"/>00110 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(settings.<link linkend="_class_candidate_search_1_1util_1_1_settings_1a8a49143cc4dd41c584106027cf3ad0b6">VARIABLE_MODIFICATIONS</link>.Count&#32;&gt;&#32;0)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;modification&#32;<emphasis role="keywordflow">in</emphasis>&#32;settings.<link linkend="_class_candidate_search_1_1util_1_1_settings_1a8a49143cc4dd41c584106027cf3ad0b6">VARIABLE_MODIFICATIONS</link>)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addPeptidoformsForModification(peptides,&#32;modification,&#32;settings);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00118"/>00118 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;peptides;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00121"/>00121 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;addPeptidoformsForModification(List&lt;Peptide&gt;&#32;peptides,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;KeyValuePair&lt;string,&#32;double&gt;&#32;modification,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_candidate_search_1_1util_1_1_settings">Settings</link>&#32;settings)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;peptidoforms&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Peptide&gt;();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00127"/>00127 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;peptide&#32;<emphasis role="keywordflow">in</emphasis>&#32;peptides)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;possibleModificationSites&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;int&gt;();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;peptide.sequence.Length;&#32;i++)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(peptide.sequence[i].ToString()&#32;==&#32;modification.Key)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;possibleModificationSites.Add(i);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00138"/>00138 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;possibleCombinations&#32;=&#32;getAllPossibleCombinations(possibleModificationSites);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00140"/>00140 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;combination&#32;<emphasis role="keywordflow">in</emphasis>&#32;possibleCombinations)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;peptidoform&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_candidate_search_1_1util_1_1_peptide">Peptide</link>(peptide.sequence,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;peptide.mass,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;int,&#32;double&gt;(),
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;settings,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;peptide.isDecoy);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00148"/>00148 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;mod&#32;<emphasis role="keywordflow">in</emphasis>&#32;peptide.modifications)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;peptidoform.addModification(mod.Key,&#32;mod.Value);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00153"/>00153 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00154"/>00154 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;position&#32;<emphasis role="keywordflow">in</emphasis>&#32;combination)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;peptidoform.addModification(position,&#32;modification.Value);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00159"/>00159 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;peptidoforms.Add(peptidoform);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00163"/>00163 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;peptides.AddRange(peptidoforms);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00166"/>00166 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;List&lt;List&lt;int&gt;&gt;&#32;getAllPossibleCombinations(List&lt;int&gt;&#32;possibleModificationSites)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;possibleCombinations&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;List&lt;int&gt;&gt;();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00170"/>00170 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;(1&#32;&lt;&lt;&#32;possibleModificationSites.Count);&#32;++i)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;combination&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;int&gt;();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;possibleModificationSites.Count;&#32;++j)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((i&#32;&amp;&#32;(1&#32;&lt;&lt;&#32;j))&#32;!=&#32;0)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;combination.Add(possibleModificationSites[j]);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;possibleCombinations.Add(combination);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00183"/>00183 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;possibleCombinations;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00186"/>00186 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;List&lt;DBProtein&gt;&#32;ReadInFasta(<emphasis role="keywordtype">string</emphasis>&#32;fastaFileName,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isDecoy)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;DBProtein&gt;&#32;proteins&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;DBProtein&gt;();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;regexPatternSequence&#32;=&#32;<emphasis role="stringliteral">&quot;[^ARNDCEQGHILKMFPSTUWYVXBZJO]&quot;</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;mappingID&#32;=&#32;0;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00192"/>00192 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StreamReader&#32;fastaFileReader&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;StreamReader(fastaFileName);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;currentLine&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;sequence&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;identifier&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00199"/>00199 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;((currentLine&#32;=&#32;fastaFileReader.ReadLine())&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(currentLine.StartsWith(<emphasis role="stringliteral">&quot;&gt;&quot;</emphasis>,&#32;StringComparison.Ordinal))
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<emphasis role="keywordtype">string</emphasis>.IsNullOrWhiteSpace(sequence))
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//sequence&#32;=&#32;sequence.Replace(&apos;J&apos;,&#32;&apos;L&apos;);</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Regex.IsMatch(sequence,&#32;regexPatternSequence))
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;builder&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;StringBuilder(<emphasis role="stringliteral">&quot;Cannot&#32;parse&#32;&quot;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;builder.Append(<emphasis role="stringliteral">&quot;fasta&#32;file&#32;at&#32;identifier&#32;&quot;</emphasis>&#32;+&#32;identifier&#32;+&#32;<emphasis role="stringliteral">&quot;.&#32;Sequence&#32;error.&#32;&quot;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Console.WriteLine(builder.ToString());
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sequence&#32;=&#32;String.Empty;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;identifier&#32;=&#32;<emphasis role="keywordtype">string</emphasis>.Empty;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Exception(<emphasis role="stringliteral">&quot;Parsing&#32;error.&quot;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;proteins.Add(GenerateDbProtein(mappingID,&#32;isDecoy,&#32;identifier,&#32;sequence));
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sequence&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mappingID++;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00220"/>00220 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;currentLine.IndexOfAny(<emphasis role="keyword">new</emphasis>[]&#32;{&#32;<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;|&apos;</emphasis>&#32;},&#32;0);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00222"/>00222 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(index&#32;==&#32;-1)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;identifier&#32;=&#32;currentLine.Substring(1);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;identifier&#32;=&#32;currentLine.Substring(1,&#32;index&#32;-&#32;1);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;indexNumber&#32;=&#32;identifier.IndexOfAny(<emphasis role="keyword">new</emphasis>[]
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="charliteral">&apos;0&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;1&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;2&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;3&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;4&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;5&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;6&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;7&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;8&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;9&apos;</emphasis>});
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(indexNumber&#32;==&#32;-1)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index&#32;=&#32;currentLine.IndexOfAny(<emphasis role="keyword">new</emphasis>[]&#32;{&#32;<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;|&apos;</emphasis>&#32;},&#32;index&#32;+&#32;1);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(index&#32;==&#32;-1)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;identifier&#32;=&#32;currentLine.Substring(1);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00240"/>00240 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;identifier&#32;=&#32;currentLine.Substring(1,&#32;index&#32;-&#32;1);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;indexNumber&#32;=&#32;identifier.IndexOfAny(<emphasis role="keyword">new</emphasis>[]
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="charliteral">&apos;0&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;1&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;2&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;3&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;4&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;5&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;6&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;7&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;8&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;9&apos;</emphasis>});
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sequence&#32;+=&#32;currentLine.ToUpper();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00252"/>00252 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<emphasis role="keywordtype">string</emphasis>.IsNullOrWhiteSpace(sequence))
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Regex.IsMatch(sequence,&#32;regexPatternSequence))
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;builder&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;StringBuilder(<emphasis role="stringliteral">&quot;Cannot&#32;parse&#32;&quot;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;builder.Append(<emphasis role="stringliteral">&quot;fasta&#32;file&#32;at&#32;identifier&#32;&quot;</emphasis>&#32;+&#32;identifier&#32;+&#32;<emphasis role="stringliteral">&quot;.&#32;Sequence&#32;error.&#32;&quot;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Console.WriteLine(builder.ToString());
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Exception(<emphasis role="stringliteral">&quot;Parsing&#32;error.&quot;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;proteins.Add(GenerateDbProtein(mappingID,&#32;isDecoy,&#32;identifier,&#32;sequence));
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sequence&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mappingID++;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(Exception&#32;e)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Console.WriteLine(<emphasis role="stringliteral">&quot;Fasta&#32;file&#32;error&quot;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Console.WriteLine(e.ToString());
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">finally</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fastaFileReader.Close();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00280"/>00280 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;proteins;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00283"/>00283 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_protein">DBProtein</link>&#32;GenerateDbProtein(<emphasis role="keywordtype">int</emphasis>&#32;mappingID,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isDecoy,&#32;<emphasis role="keywordtype">string</emphasis>&#32;identifier,&#32;<emphasis role="keywordtype">string</emphasis>&#32;sequence)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00286"/>00286 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isDecoy)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//mark&#32;proteins&#32;as&#32;decoys&#32;by&#32;negative&#32;ProteinIDs;</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_protein">DBProtein</link>(identifier,&#32;-mappingID,&#32;sequence);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_protein">DBProtein</link>(identifier,&#32;mappingID,&#32;sequence);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00295"/>00295 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00296"/><link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_protein">00296</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_protein">DBProtein</link>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;Sequence&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsDecoy&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_prot_ref">DBProtRef</link>&#32;DbProtRef&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00301"/>00301 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_protein">DBProtein</link>(<emphasis role="keywordtype">string</emphasis>&#32;identifier,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>,&#32;<emphasis role="keywordtype">string</emphasis>&#32;sequence,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isDecoy&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;ok&#32;=&#32;<emphasis role="keywordtype">int</emphasis>.TryParse(identifier,&#32;out&#32;<emphasis role="keywordtype">int</emphasis>&#32;identy);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ok)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DbProtRef&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_prot_ref">DBProtRef</link>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ProtId&#32;=&#32;identy,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MappingId&#32;=&#32;id,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ProtIdentifier&#32;=&#32;identifier
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DbProtRef&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_prot_ref">DBProtRef</link>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ProtId&#32;=&#32;id,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MappingId&#32;=&#32;id,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ProtIdentifier&#32;=&#32;identifier
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sequence&#32;=&#32;sequence;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IsDecoy&#32;=&#32;isDecoy;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00327"/>00327 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00328"/>00328 &#32;&#32;&#32;&#32;[MessagePackObject]
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00329"/><link linkend="_struct_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_prot_ref">00329</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_prot_ref">DBProtRef</link>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00330"/>00330 &#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Key(0)]
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;ProtId&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Key(1)]
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MappingId&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Key(2)]
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;ProtIdentifier&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00337"/>00337 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00338"/>00338 &#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00339"/>00339 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00340"/><link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_enzyme">00340</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_enzyme">Enzyme</link>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00341"/>00341 &#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_enzyme">Enzyme</link>()
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CleavageInhibitors&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CleavageSites&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Offset&#32;=&#32;0;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Specificity&#32;=&#32;CLEAVAGE_SPECIFICITY.FULL;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Name&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00350"/>00350 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;CLEAVAGE_SPECIFICITY&#32;{&#32;FULL,&#32;SEMI,&#32;SEMI_N,&#32;SEMI_C&#32;};
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00352"/>00352 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;CleavageSites&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;CleavageInhibitors&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;CLEAVAGE_SPECIFICITY&#32;Specificity&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;Offset&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;Name&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00358"/>00358 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Regex&#32;TheRegex&#32;=&gt;&#32;regexInit.Value;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Lazy&lt;Regex&gt;&#32;regexInit&#32;=&gt;&#32;<emphasis role="keyword">new</emphasis>&#32;Lazy&lt;Regex&gt;(()&#32;=&gt;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Offset&#32;==&#32;1)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//C-Terminal</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StringBuilder&#32;builder&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;StringBuilder(<emphasis role="stringliteral">&quot;(?&lt;=[&quot;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;builder.Append(CleavageSites);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;builder.Append(<emphasis role="stringliteral">&quot;])&quot;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!String.IsNullOrEmpty(CleavageInhibitors))
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;builder.Append(<emphasis role="stringliteral">&quot;(?=[^&quot;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;builder.Append(CleavageInhibitors);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;builder.Append(<emphasis role="stringliteral">&quot;])&quot;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&quot;(?&lt;=[&quot;&#32;+&#32;Enzyme.CleavageSites&#32;+&#32;&quot;])(?=[^&quot;&#32;+&#32;Enzyme.CleavageInhibitors&#32;+&#32;&quot;])&quot;</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Regex(builder.ToString());
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//N-Terminal</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StringBuilder&#32;builder&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;StringBuilder(<emphasis role="stringliteral">&quot;(?=[&quot;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;builder.Append(CleavageSites);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;builder.Append(<emphasis role="stringliteral">&quot;]&quot;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!String.IsNullOrEmpty(CleavageInhibitors))
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;builder.Append(<emphasis role="stringliteral">&quot;[^&quot;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;builder.Append(CleavageInhibitors);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;builder.Append(<emphasis role="stringliteral">&quot;]&quot;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;builder.Append(<emphasis role="stringliteral">&quot;)&quot;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&quot;(?=[&quot;&#32;+&#32;Enzyme.CleavageSites&#32;+&#32;&quot;][^&quot;&#32;+&#32;Enzyme.CleavageInhibitors&#32;+&#32;&quot;])&quot;</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Regex(builder.ToString());
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00394"/>00394 &#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00395"/>00395 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00396"/>00396 &#32;&#32;&#32;&#32;[MessagePackObject]
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00397"/><link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_peptide">00397</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_peptide">DBPeptide</link>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00398"/>00398 &#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Key(0)]
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;Mass&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Key(1)]
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MassInt&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Key(2)]
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;Sequence&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Key(3)]
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;ProteinStartFlag&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Key(4)]
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;DBProtRef&gt;&#32;DbProtRefs&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Key(5)]
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;SequenceOriginal&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Key(6)]
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MissedCleavages&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[IgnoreMember]
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;SeqHash&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00415"/>00415 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_peptide">DBPeptide</link>()
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sequence&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;&#32;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DbProtRefs&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;DBProtRef&gt;();&#32;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SequenceOriginal&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00422"/>00422 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_peptide">DBPeptide</link>(<emphasis role="keywordtype">string</emphasis>&#32;sequence,&#32;<emphasis role="keywordtype">string</emphasis>&#32;sequenceOriginal,&#32;<emphasis role="keywordtype">int</emphasis>&#32;missedCleavages,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;proteinStartFlag,&#32;<link linkend="_struct_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_prot_ref">DBProtRef</link>&#32;protRef)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MissedCleavages&#32;=&#32;missedCleavages;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sequence&#32;=&#32;sequence;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SequenceOriginal&#32;=&#32;sequenceOriginal;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ProteinStartFlag&#32;=&#32;proteinStartFlag;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SeqHash&#32;=&#32;CreateMD5();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00430"/>00430 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DbProtRefs&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;DBProtRef&gt;(1)&#32;{&#32;protRef&#32;};
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00433"/>00433 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">internal</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;AddToProtRefs(<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_peptide">DBPeptide</link>&#32;pep)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(DbProtRefs&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;DbProtRefs.Count&#32;&gt;&#32;0)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DbProtRefs&#32;=&#32;DbProtRefs.Concat(pep.DbProtRefs).Distinct().ToList();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DbProtRefs&#32;=&#32;pep.DbProtRefs;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00445"/>00445 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;CreateMD5()
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(Sequence,&#32;MissedCleavages,&#32;ProteinStartFlag).GetHashCode();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00450"/>00450 &#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00451"/>00451 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00452"/>00452 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>HelperMethods
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00453"/>00453 &#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_peptide">DBPeptide</link>&#32;FindPeptideWithSameHash(<emphasis role="keyword">this</emphasis>&#32;List&lt;DBPeptide&gt;&#32;peptides,&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_peptide">DBPeptide</link>&#32;pep)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(var&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;peptides.Count;&#32;i++)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;x&#32;=&#32;peptides[i];
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x.SeqHash&#32;==&#32;pep.SeqHash)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;x;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00466"/>00466 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsBetweenExcludeBounds(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;target,&#32;<emphasis role="keywordtype">double</emphasis>&#32;start,&#32;<emphasis role="keywordtype">double</emphasis>&#32;end)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00469"/>00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;target&#32;&gt;&#32;start&#32;&amp;&amp;&#32;target&#32;&lt;&#32;end;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00471"/>00471 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00472"/>00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsBetweenIncludeBounds(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;target,&#32;<emphasis role="keywordtype">int</emphasis>&#32;start,&#32;<emphasis role="keywordtype">int</emphasis>&#32;end)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;target&#32;&gt;=&#32;start&#32;&amp;&amp;&#32;target&#32;&lt;=&#32;end;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00475"/>00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00476"/>00476 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;MergeToDBDictionaries(List&lt;DBPeptide&gt;&#32;dbFrom,&#32;ref&#32;DigesterDB&#32;dbTo,&#32;ParallelOptions&#32;parallelOptions)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dbTo.DbPeptidesDictMassKey&#32;=&#32;dbFrom.GroupBy(x&#32;=&gt;&#32;x.MassInt)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.AsParallel()
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.WithDegreeOfParallelism(parallelOptions.MaxDegreeOfParallelism)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.Select(g&#32;=&gt;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;theList&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;DBPeptide&gt;();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;pep&#32;<emphasis role="keywordflow">in</emphasis>&#32;g)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;itemWithSameHash&#32;=&#32;theList.FindPeptideEqualTo(pep);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00487"/>00487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//var&#32;itemWithSameHash&#32;=&#32;theList.Find(x&#32;=&gt;&#32;DBPeptideEquals(x,&#32;pep));</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00488"/>00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(itemWithSameHash&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00489"/>00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00490"/>00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;itemWithSameHash.AddToProtRefs(pep);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00491"/>00491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00492"/>00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00493"/>00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;theList.Add(pep);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00495"/>00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00496"/>00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00497"/>00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(g.Key,&#32;theList);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00498"/>00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}).ToDictionary(t&#32;=&gt;&#32;t.Key,&#32;t&#32;=&gt;&#32;t.theList);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00499"/>00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00500"/>00500 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00501"/>00501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;DBPeptide&#32;FindPeptideEqualTo(<emphasis role="keyword">this</emphasis>&#32;List&lt;DBPeptide&gt;&#32;list,&#32;DBPeptide&#32;comparePep)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00502"/>00502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00503"/>00503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(var&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;list.Count;&#32;i++)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00504"/>00504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00505"/>00505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;x&#32;=&#32;list[i];
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00506"/>00506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(DBPeptideEquals(comparePep,&#32;x))
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00507"/>00507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00508"/>00508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;x;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00509"/>00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00510"/>00510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00511"/>00511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00512"/>00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00513"/>00513 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00514"/>00514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;DBPeptideEquals(DBPeptide&#32;x,&#32;DBPeptide&#32;pep)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00515"/>00515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00516"/>00516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x.SeqHash&#32;!=&#32;pep.SeqHash)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00517"/>00517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00518"/>00518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00519"/>00519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00520"/>00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x.ProteinStartFlag&#32;!=&#32;pep.ProteinStartFlag)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00521"/>00521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00522"/>00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00523"/>00523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00524"/>00524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x.MissedCleavages&#32;!=&#32;pep.MissedCleavages)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00525"/>00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00526"/>00526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00527"/>00527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00528"/>00528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x.Sequence&#32;!=&#32;pep.Sequence)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00529"/>00529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00530"/>00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00531"/>00531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00532"/>00532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00533"/>00533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00534"/>00534 &#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00535"/>00535 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00536"/><link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_protein_digester">00536</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_protein_digester">ProteinDigester</link>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00537"/>00537 &#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00538"/>00538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_enzyme">Enzyme</link>&#32;_enzyme;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00539"/>00539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>&#32;_missedCleavages;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00540"/>00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_useMonoisotopicMass;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00541"/>00541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>&#32;_minPepLength;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00542"/>00542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>&#32;_maxPepLength;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00543"/>00543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_protein">DBProtein</link>&#32;_dbProtein;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00544"/>00544 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00545"/>00545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;DBPeptide&gt;&#32;_dbPeptides;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00546"/>00546 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00547"/>00547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>PeptideInfo
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00548"/>00548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00549"/>00549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;Start;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00550"/>00550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MissedCleavages;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00551"/>00551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00552"/>00552 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00553"/>00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_protein_digester">ProteinDigester</link>(<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_enzyme">Enzyme</link>&#32;enzyme,&#32;<emphasis role="keywordtype">int</emphasis>&#32;missedCleavages,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;useMonoisotopicMass,&#32;<emphasis role="keywordtype">int</emphasis>&#32;minPepLength,&#32;<emphasis role="keywordtype">int</emphasis>&#32;maxPepLength,&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_protein">DBProtein</link>&#32;dbProtein)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00554"/>00554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00555"/>00555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_enzyme&#32;=&#32;enzyme;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00556"/>00556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_missedCleavages&#32;=&#32;missedCleavages;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00557"/>00557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_useMonoisotopicMass&#32;=&#32;useMonoisotopicMass;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00558"/>00558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_minPepLength&#32;=&#32;minPepLength;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00559"/>00559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_maxPepLength&#32;=&#32;maxPepLength;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00560"/>00560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_dbProtein&#32;=&#32;dbProtein;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00561"/>00561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_dbPeptides&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;DBPeptide&gt;();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00562"/>00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00563"/>00563 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00564"/>00564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;DBPeptide&gt;&#32;DigestProteinIntoList()
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00565"/>00565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00566"/>00566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_dbPeptides&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;DBPeptide&gt;();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00567"/>00567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DigestSingleProtein(_dbProtein);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00568"/>00568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_dbPeptides;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00569"/>00569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00570"/>00570 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00571"/>00571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DigestSingleProtein(<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_protein">DBProtein</link>&#32;protein)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00572"/>00572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00573"/>00573 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00574"/>00574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_enzyme.CleavageSites&#32;==&#32;<emphasis role="stringliteral">&quot;X&quot;</emphasis>)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00575"/>00575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00576"/>00576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//no-enzyme&#32;search</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DigestSingleProteinWithNoEnzyme(protein);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00578"/>00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00579"/>00579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_enzyme.CleavageSites&#32;==&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00580"/>00580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00581"/>00581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//no&#32;cleavage&#32;(peptide&#32;db&#32;or&#32;top&#32;down)</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00582"/>00582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SaveSinglePeptide(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_peptide">DBPeptide</link>(protein.Sequence,&#32;protein.Sequence,&#32;0,&#32;IsProteinStart(0,&#32;protein.Sequence[0]),&#32;protein.DbProtRef));
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00583"/>00583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00584"/>00584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00585"/>00585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00586"/>00586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;peptides&#32;=&#32;SplitProtein(_enzyme,&#32;protein,&#32;_missedCleavages,&#32;0);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00587"/>00587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;pep&#32;<emphasis role="keywordflow">in</emphasis>&#32;peptides)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00588"/>00588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00589"/>00589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SaveSinglePeptide(pep);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00590"/>00590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00591"/>00591 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00592"/>00592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(protein.Sequence.StartsWith(<emphasis role="stringliteral">&quot;M&quot;</emphasis>,&#32;StringComparison.Ordinal)&#32;&amp;&amp;&#32;_enzyme.CleavageSites&#32;!=&#32;<emphasis role="stringliteral">&quot;X&quot;</emphasis>&#32;&amp;&amp;&#32;_enzyme.CleavageSites&#32;!=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00593"/>00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00594"/>00594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;prot&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_protein">DBProtein</link>(protein.DbProtRef.ProtIdentifier,&#32;protein.DbProtRef.MappingId,&#32;protein.Sequence.Substring(1));
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00595"/>00595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;otherPeptides&#32;=&#32;SplitProtein(_enzyme,&#32;prot,&#32;_missedCleavages,&#32;1);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00596"/>00596 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00597"/>00597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;pep&#32;<emphasis role="keywordflow">in</emphasis>&#32;otherPeptides)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00599"/>00599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;peptideWithSameHash&#32;=&#32;peptides.FindPeptideWithSameHash(pep);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00600"/>00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(peptideWithSameHash&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00601"/>00601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00602"/>00602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SaveSinglePeptide(pep);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00603"/>00603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00604"/>00604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00605"/>00605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(peptideWithSameHash.MissedCleavages&#32;==&#32;pep.MissedCleavages)&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00606"/>00606 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00607"/>00607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SaveSinglePeptide(pep);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00608"/>00608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00609"/>00609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00610"/>00610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00611"/>00611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00612"/>00612 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00613"/>00613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DigestSingleProteinWithNoEnzyme(<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_protein">DBProtein</link>&#32;protein)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00614"/>00614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00615"/>00615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SortedSet&lt;int&gt;&#32;positionsOfX&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;SortedSet&lt;int&gt;();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00616"/>00616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SortedSet&lt;int&gt;&#32;positionsOfZ&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;SortedSet&lt;int&gt;();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00617"/>00617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SortedSet&lt;int&gt;&#32;positionsOfB&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;SortedSet&lt;int&gt;();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00618"/>00618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MatchCollection&#32;collX&#32;=&#32;Regex.Matches(protein.Sequence,&#32;<emphasis role="stringliteral">&quot;X&quot;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00619"/>00619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MatchCollection&#32;collZ&#32;=&#32;Regex.Matches(protein.Sequence,&#32;<emphasis role="stringliteral">&quot;Z&quot;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00620"/>00620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MatchCollection&#32;collB&#32;=&#32;Regex.Matches(protein.Sequence,&#32;<emphasis role="stringliteral">&quot;B&quot;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00621"/>00621 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00622"/>00622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;m&#32;=&#32;0;&#32;m&#32;&lt;&#32;collX.Count;&#32;++m)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00623"/>00623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00624"/>00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;positionsOfX.Add(collX[m].Index);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00626"/>00626 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00627"/>00627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;m&#32;=&#32;0;&#32;m&#32;&lt;&#32;collZ.Count;&#32;++m)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00629"/>00629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;positionsOfZ.Add(collZ[m].Index);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00630"/>00630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00631"/>00631 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00632"/>00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;m&#32;=&#32;0;&#32;m&#32;&lt;&#32;collB.Count;&#32;++m)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00633"/>00633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00634"/>00634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;positionsOfB.Add(collB[m].Index);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00635"/>00635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00636"/>00636 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00637"/>00637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;s&#32;=&#32;0;&#32;s&#32;&lt;&#32;protein.Sequence.Length;&#32;++s)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00638"/>00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00639"/>00639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;l&#32;=&#32;1;&#32;l&#32;&lt;&#32;protein.Sequence.Length&#32;-&#32;s&#32;+&#32;1;&#32;++l)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;seqL&#32;=&#32;l&#32;-&#32;s;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00642"/>00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(seqL&#32;&lt;&#32;_minPepLength)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(seqL&#32;&gt;&#32;_maxPepLength)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00645"/>00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00646"/>00646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(l&#32;&gt;&#32;150)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00647"/>00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00648"/>00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SortedSet&lt;int&gt;&#32;xInSeq&#32;=&#32;positionsOfX.GetViewBetween(s,&#32;s&#32;+&#32;l);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00649"/>00649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xInSeq.Count&#32;&gt;&#32;1)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00650"/>00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00651"/>00651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SortedSet&lt;int&gt;&#32;bInSeq&#32;=&#32;positionsOfB.GetViewBetween(s,&#32;s&#32;+&#32;l);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00652"/>00652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bInSeq.Count&#32;&gt;&#32;3)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00653"/>00653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00654"/>00654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SortedSet&lt;int&gt;&#32;zInSeq&#32;=&#32;positionsOfZ.GetViewBetween(s,&#32;s&#32;+&#32;l);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00655"/>00655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(zInSeq.Count&#32;&gt;&#32;3&#32;||&#32;zInSeq.Count&#32;+&#32;bInSeq.Count&#32;&gt;&#32;3)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00656"/>00656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00657"/>00657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xInSeq.Count&#32;&gt;&#32;0&#32;||&#32;bInSeq.Count&#32;&gt;&#32;0&#32;||&#32;zInSeq.Count&#32;&gt;&#32;0)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00658"/>00658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00659"/>00659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//handle&#32;replacement&#32;characters</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00660"/>00660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SaveSinglePeptide(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_peptide">DBPeptide</link>(protein.Sequence.Substring(s,&#32;l),&#32;protein.Sequence.Substring(s,&#32;l),&#32;0,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00661"/>00661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IsProteinStart(s,&#32;protein.Sequence[0]),&#32;protein.DbProtRef));
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00662"/>00662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00663"/>00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00664"/>00664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00665"/>00665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//save&#32;pep</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00666"/>00666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;sseq&#32;=&#32;protein.Sequence.Substring(s,&#32;l);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00667"/>00667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;mass&#32;=&#32;ChemicalUtils.CalculatePeptideMass(sseq,&#32;_useMonoisotopicMass);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00668"/>00668 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00669"/>00669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(mass.IsBetweenExcludeBounds(200,&#32;6000))
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00670"/>00670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(!(mass&#32;&gt;&#32;200)&#32;||&#32;!(mass&#32;&lt;&#32;6000))</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00671"/>00671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00672"/>00672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;if&#32;(mass&#32;&gt;&#32;6000)</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00673"/>00673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;break;</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00674"/>00674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00675"/>00675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//else</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00676"/>00676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00677"/>00677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SavePeptide(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_peptide">DBPeptide</link>(sseq,&#32;sseq,&#32;0,&#32;IsProteinStart(s,&#32;protein.Sequence[0]),&#32;protein.DbProtRef));
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00678"/>00678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00679"/>00679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00680"/>00680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00681"/>00681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00682"/>00682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00683"/>00683 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00684"/>00684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SaveSinglePeptide(<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_peptide">DBPeptide</link>&#32;pep)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00685"/>00685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00686"/>00686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(String.IsNullOrEmpty(pep.Sequence))
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00687"/>00687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00688"/>00688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pep.Sequence.Length&#32;&lt;&#32;_minPepLength&#32;||&#32;pep.Sequence.Length&#32;&gt;&#32;_maxPepLength)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00689"/>00689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00690"/>00690 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00691"/>00691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pep.Sequence.Contains(<emphasis role="charliteral">&apos;B&apos;</emphasis>)&#32;||&#32;pep.Sequence.Contains(<emphasis role="charliteral">&apos;Z&apos;</emphasis>)&#32;||&#32;pep.Sequence.Contains(<emphasis role="charliteral">&apos;X&apos;</emphasis>))
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00692"/>00692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00693"/>00693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;temp&#32;=&#32;pep.Sequence.Replace(<emphasis role="stringliteral">&quot;X&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00694"/>00694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pep.Sequence.Length&#32;-&#32;temp.Length&#32;&gt;&#32;1)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00695"/>00695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00696"/>00696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00697"/>00697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00698"/>00698 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00699"/>00699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp&#32;=&#32;pep.Sequence.Replace(<emphasis role="stringliteral">&quot;B&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00700"/>00700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp&#32;=&#32;temp.Replace(<emphasis role="stringliteral">&quot;Z&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00701"/>00701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pep.Sequence.Length&#32;-&#32;temp.Length&#32;&gt;&#32;3)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00702"/>00702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00703"/>00703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00704"/>00704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00705"/>00705 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00706"/>00706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;char&gt;&#32;replacements&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;char&gt;();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00707"/>00707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;pep.Sequence.Length;&#32;++i)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00708"/>00708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00709"/>00709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;replacements.Add(<emphasis role="charliteral">&apos;#&apos;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00710"/>00710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00711"/>00711 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00712"/>00712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pep.Sequence.Contains(<emphasis role="charliteral">&apos;X&apos;</emphasis>))
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00713"/>00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00714"/>00714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GenerateCombinationsForX(pep,&#32;replacements);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00715"/>00715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00716"/>00716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00717"/>00717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00718"/>00718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CalculateMass(pep,&#32;replacements);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00719"/>00719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00720"/>00720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00721"/>00721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00722"/>00722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00723"/>00723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pep.Mass&#32;=&#32;ChemicalUtils.CalculatePeptideMass(pep.Sequence,&#32;_useMonoisotopicMass);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00724"/>00724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SavePeptide(pep);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00725"/>00725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00726"/>00726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00727"/>00727 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00728"/>00728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;List&lt;DBPeptide&gt;&#32;SplitProtein(<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_enzyme">Enzyme</link>&#32;enzyme,&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_protein">DBProtein</link>&#32;prot,&#32;<emphasis role="keywordtype">int</emphasis>&#32;missedCleavages,&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00729"/>00729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00730"/>00730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;peptides&#32;=&#32;enzyme.TheRegex.Split(prot.Sequence);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00731"/>00731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;DBPeptide&gt;&#32;peps&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;DBPeptide&gt;(offset&#32;==&#32;0&#32;?&#32;peptides.Length&#32;*&#32;3&#32;:&#32;3);&#32;<emphasis role="comment">//&#32;guessing&#32;magic&#32;numbers</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00732"/>00732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;start&#32;=&#32;offset;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00733"/>00733 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00734"/>00734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dictionary&lt;string,&#32;PeptideInfo&gt;&#32;allPeps&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;string,&#32;PeptideInfo&gt;();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00735"/>00735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;peptides.Length;&#32;++i)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00736"/>00736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00737"/>00737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(offset&#32;&gt;&#32;0&#32;&amp;&amp;&#32;i&#32;&gt;&#32;0)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00738"/>00738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00739"/>00739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!String.IsNullOrEmpty(peptides[i]))
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00740"/>00740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00741"/>00741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;myPeptide&#32;=&#32;peptides[i];
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00742"/>00742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!allPeps.ContainsKey(myPeptide))
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00743"/>00743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00744"/>00744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//peps.Add(new&#32;DBPeptide(myPeptide,&#32;myPeptide,&#32;0,&#32;IsProteinStart(0,&#32;myPeptide[0]),&#32;prot.DbProtRef));</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00745"/>00745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;peps.Add(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_peptide">DBPeptide</link>(myPeptide,&#32;myPeptide,&#32;0,&#32;IsProteinStart(myPeptide,&#32;prot.Sequence),&#32;prot.DbProtRef));
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00746"/>00746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allPeps.Add(peptides[i],&#32;<emphasis role="keyword">new</emphasis>&#32;PeptideInfo
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00747"/>00747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00748"/>00748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Start&#32;=&#32;start,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00749"/>00749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MissedCleavages&#32;=&#32;0
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00750"/>00750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00751"/>00751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00752"/>00752 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00753"/>00753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;1;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00754"/>00754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;pep&#32;=&#32;peptides[i];
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00755"/>00755 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00756"/>00756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;count&#32;=&#32;0;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00757"/>00757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(count&#32;&lt;&#32;missedCleavages)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00758"/>00758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00759"/>00759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;+&#32;j&#32;&lt;&#32;peptides.Length)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00760"/>00760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00761"/>00761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!String.IsNullOrEmpty(peptides[i&#32;+&#32;j]))
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00762"/>00762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00763"/>00763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pep&#32;+=&#32;peptides[i&#32;+&#32;j];
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00764"/>00764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!allPeps.ContainsKey(pep))
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00765"/>00765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00766"/>00766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//peps.Add(new&#32;DBPeptide(pep,&#32;pep,&#32;count&#32;+&#32;1,&#32;IsProteinStart(0,&#32;pep[0]),&#32;prot.DbProtRef));</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00767"/>00767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;peps.Add(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_peptide">DBPeptide</link>(pep,&#32;pep,&#32;count&#32;+&#32;1,&#32;IsProteinStart(pep,&#32;prot.Sequence),&#32;prot.DbProtRef));
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00768"/>00768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allPeps.Add(pep,&#32;<emphasis role="keyword">new</emphasis>&#32;PeptideInfo
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00769"/>00769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00770"/>00770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Start&#32;=&#32;start,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00771"/>00771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MissedCleavages&#32;=&#32;count&#32;+&#32;1
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00772"/>00772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00773"/>00773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00774"/>00774 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00775"/>00775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++count;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00776"/>00776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00777"/>00777 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00778"/>00778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++j;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00779"/>00779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00780"/>00780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00781"/>00781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00782"/>00782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00783"/>00783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00784"/>00784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00785"/>00785 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00786"/>00786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;start&#32;+=&#32;peptides[i].Length;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00787"/>00787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00788"/>00788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00789"/>00789 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00790"/>00790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(enzyme.CleavageSites&#32;!=&#32;<emphasis role="stringliteral">&quot;X&quot;</emphasis>&#32;&amp;&amp;&#32;(enzyme.Specificity&#32;==&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_enzyme">Enzyme</link>.CLEAVAGE_SPECIFICITY.SEMI&#32;||
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00791"/>00791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;enzyme.Specificity&#32;==&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_enzyme">Enzyme</link>.CLEAVAGE_SPECIFICITY.SEMI_C&#32;||
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00792"/>00792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;enzyme.Specificity&#32;==&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_enzyme">Enzyme</link>.CLEAVAGE_SPECIFICITY.SEMI_N))
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00793"/>00793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00794"/>00794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>&#32;peptide&#32;<emphasis role="keywordflow">in</emphasis>&#32;allPeps.Keys.ToArray())
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00795"/>00795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00796"/>00796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PeptideInfo&#32;info&#32;=&#32;allPeps[peptide];
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00797"/>00797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;peptide.Length&#32;-&#32;1;&#32;++i)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00798"/>00798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00799"/>00799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;newFront&#32;=&#32;peptide.Substring(i);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00800"/>00800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;newBack&#32;=&#32;peptide.Substring(0,&#32;peptide.Length&#32;-&#32;i);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00801"/>00801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!allPeps.ContainsKey(newFront)&#32;&amp;&amp;&#32;(enzyme.Specificity&#32;==&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_enzyme">Enzyme</link>.CLEAVAGE_SPECIFICITY.SEMI&#32;||
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00802"/>00802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;enzyme.Specificity&#32;==&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_enzyme">Enzyme</link>.CLEAVAGE_SPECIFICITY.SEMI_C))
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00803"/>00803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00804"/>00804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//peps.Add(new&#32;DBPeptide(newFront,&#32;newFront,&#32;info.MissedCleavages,&#32;IsProteinStart(0,&#32;newFront[0]),&#32;prot.DbProtRef));</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00805"/>00805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;peps.Add(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_peptide">DBPeptide</link>(newFront,&#32;newFront,&#32;info.MissedCleavages,&#32;IsProteinStart(newFront,&#32;prot.Sequence),&#32;prot.DbProtRef));
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00806"/>00806 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00807"/>00807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allPeps.Add(newFront,&#32;<emphasis role="keyword">new</emphasis>&#32;PeptideInfo
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00808"/>00808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00809"/>00809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Start&#32;=&#32;info.Start&#32;+&#32;i,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00810"/>00810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MissedCleavages&#32;=&#32;info.MissedCleavages
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00811"/>00811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00812"/>00812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00813"/>00813 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00814"/>00814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(allPeps.ContainsKey(newBack)&#32;||&#32;(enzyme.Specificity&#32;!=&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_enzyme">Enzyme</link>.CLEAVAGE_SPECIFICITY.SEMI&#32;&amp;&amp;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00815"/>00815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;enzyme.Specificity&#32;!=&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_enzyme">Enzyme</link>.CLEAVAGE_SPECIFICITY.SEMI_N))&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00816"/>00816 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00817"/>00817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//peps.Add(new&#32;DBPeptide(newBack,&#32;newBack,&#32;info.MissedCleavages,&#32;IsProteinStart(0,&#32;newBack[0]),&#32;prot.DbProtRef));</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00818"/>00818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;peps.Add(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_peptide">DBPeptide</link>(newBack,&#32;newBack,&#32;info.MissedCleavages,&#32;IsProteinStart(newBack,&#32;prot.Sequence),&#32;prot.DbProtRef));
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00819"/>00819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allPeps.Add(newBack,&#32;<emphasis role="keyword">new</emphasis>&#32;PeptideInfo
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00820"/>00820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00821"/>00821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Start&#32;=&#32;info.Start,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00822"/>00822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MissedCleavages&#32;=&#32;info.MissedCleavages
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00823"/>00823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00824"/>00824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00825"/>00825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00826"/>00826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00827"/>00827 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00828"/>00828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;peps;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00829"/>00829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00830"/>00830 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00831"/>00831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SavePeptide(<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_peptide">DBPeptide</link>&#32;pep)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00832"/>00832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00833"/>00833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pep.Sequence.Length&#32;&lt;&#32;2)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00834"/>00834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00835"/>00835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!pep.Sequence.Length.IsBetweenIncludeBounds(_minPepLength,&#32;_maxPepLength))
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00836"/>00836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00837"/>00837 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00838"/>00838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pep.Mass&#32;=&#32;ChemicalUtils.CalculatePeptideMass(pep.Sequence,&#32;_useMonoisotopicMass);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00839"/>00839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pep.MassInt&#32;=&#32;(int)(pep.Mass);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00840"/>00840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pep.SeqHash&#32;=&#32;pep.CreateMD5();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00841"/>00841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_dbPeptides.Add(pep);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00842"/>00842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00843"/>00843 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00844"/>00844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_peptide">DBPeptide</link>&#32;CreatePeptide(<emphasis role="keywordtype">string</emphasis>&#32;sequence,&#32;<emphasis role="keywordtype">string</emphasis>&#32;origSequence,&#32;<emphasis role="keywordtype">int</emphasis>&#32;missedCleavages,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;proteinStartFlag,&#32;<link linkend="_struct_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_prot_ref">DBProtRef</link>&#32;protRef)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00845"/>00845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00846"/>00846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;pep&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_peptide">DBPeptide</link>(sequence,&#32;origSequence,&#32;missedCleavages,&#32;proteinStartFlag,&#32;protRef);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00847"/>00847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pep.Sequence.Length&#32;&lt;&#32;2)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00848"/>00848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00849"/>00849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pep.Sequence.Length&#32;&lt;&#32;_minPepLength&#32;||&#32;pep.Sequence.Length&#32;&gt;&#32;_maxPepLength)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00850"/>00850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00851"/>00851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pep.Mass&#32;=&#32;ChemicalUtils.CalculatePeptideMass(pep.Sequence,&#32;_useMonoisotopicMass);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00852"/>00852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pep.MassInt&#32;=&#32;(int)(pep.Mass);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00853"/>00853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pep.SeqHash&#32;=&#32;pep.CreateMD5();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00854"/>00854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pep;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00855"/>00855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00856"/>00856 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00857"/>00857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsProteinStart(<emphasis role="keywordtype">int</emphasis>&#32;startPosition,&#32;<emphasis role="keywordtype">char</emphasis>&#32;protStarter)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00858"/>00858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00859"/>00859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(startPosition&#32;==&#32;0&#32;||&#32;(startPosition&#32;==&#32;1&#32;&amp;&amp;&#32;protStarter&#32;==&#32;<emphasis role="charliteral">&apos;M&apos;</emphasis>));
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00860"/>00860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00861"/>00861 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00862"/>00862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsProteinStart(<emphasis role="keywordtype">string</emphasis>&#32;pep,&#32;<emphasis role="keywordtype">string</emphasis>&#32;prot)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00863"/>00863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00864"/>00864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;IsProteinStart(prot.IndexOf(pep),&#32;prot[0]);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00865"/>00865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00866"/>00866 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00867"/>00867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;CalculateMass(<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_peptide">DBPeptide</link>&#32;info,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00868"/>00868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;char&gt;&#32;replacements)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00869"/>00869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00870"/>00870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info.Sequence.Contains(<emphasis role="charliteral">&apos;B&apos;</emphasis>))
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00871"/>00871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00872"/>00872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;firstIndex&#32;=&#32;info.Sequence.IndexOf(<emphasis role="charliteral">&apos;B&apos;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00873"/>00873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;changedPeptide&#32;=&#32;info.Sequence;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00874"/>00874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>[]&#32;temp&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>[replacements.Count];
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00875"/>00875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;replacements.CopyTo(temp);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00876"/>00876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;char&gt;&#32;currentReplacements&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;char&gt;(temp)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00877"/>00877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00878"/>00878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[firstIndex]&#32;=&#32;<emphasis role="charliteral">&apos;N&apos;</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00879"/>00879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00880"/>00880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;changedPeptide&#32;=&#32;changedPeptide.Insert(firstIndex,&#32;<emphasis role="stringliteral">&quot;N&quot;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00881"/>00881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;changedPeptide&#32;=&#32;changedPeptide.Remove(firstIndex&#32;+&#32;1,&#32;1);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00882"/>00882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info.Sequence&#32;=&#32;changedPeptide;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00883"/>00883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CalculateMass(info,&#32;currentReplacements);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00884"/>00884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;changedPeptide&#32;=&#32;changedPeptide.Insert(firstIndex,&#32;<emphasis role="stringliteral">&quot;D&quot;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00885"/>00885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;changedPeptide&#32;=&#32;changedPeptide.Remove(firstIndex&#32;+&#32;1,&#32;1);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00886"/>00886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentReplacements[firstIndex]&#32;=&#32;<emphasis role="charliteral">&apos;D&apos;</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00887"/>00887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info.Sequence&#32;=&#32;changedPeptide;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00888"/>00888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CalculateMass(info,&#32;currentReplacements);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00889"/>00889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00890"/>00890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info.Sequence.Contains(<emphasis role="charliteral">&apos;Z&apos;</emphasis>))
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00891"/>00891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00892"/>00892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;firstIndex&#32;=&#32;info.Sequence.IndexOf(<emphasis role="charliteral">&apos;Z&apos;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00893"/>00893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;changedPeptide&#32;=&#32;info.Sequence;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00894"/>00894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>[]&#32;temp&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>[replacements.Count];
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00895"/>00895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;replacements.CopyTo(temp);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00896"/>00896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;char&gt;&#32;currentReplacements&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;char&gt;(temp)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00897"/>00897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00898"/>00898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[firstIndex]&#32;=&#32;<emphasis role="charliteral">&apos;E&apos;</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00899"/>00899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00900"/>00900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;changedPeptide&#32;=&#32;changedPeptide.Insert(firstIndex,&#32;<emphasis role="stringliteral">&quot;E&quot;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00901"/>00901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;changedPeptide&#32;=&#32;changedPeptide.Remove(firstIndex&#32;+&#32;1,&#32;1);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00902"/>00902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info.Sequence&#32;=&#32;changedPeptide;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00903"/>00903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CalculateMass(info,&#32;currentReplacements);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00904"/>00904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;changedPeptide&#32;=&#32;changedPeptide.Insert(firstIndex,&#32;<emphasis role="stringliteral">&quot;Q&quot;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00905"/>00905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;changedPeptide&#32;=&#32;changedPeptide.Remove(firstIndex&#32;+&#32;1,&#32;1);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00906"/>00906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentReplacements[firstIndex]&#32;=&#32;<emphasis role="charliteral">&apos;Q&apos;</emphasis>;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00907"/>00907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info.Sequence&#32;=&#32;changedPeptide;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00908"/>00908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CalculateMass(info,&#32;currentReplacements);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00909"/>00909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00910"/>00910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00911"/>00911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00912"/>00912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SavePeptide(info);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00913"/>00913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//FinalCalculation(info);</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00914"/>00914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00915"/>00915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00916"/>00916 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00917"/>00917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;FinalCalculation(<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_peptide">DBPeptide</link>&#32;info)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00918"/>00918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00919"/>00919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;mass&#32;=&#32;ChemicalUtils.CalculatePeptideMass(info.Sequence,&#32;_useMonoisotopicMass);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00920"/>00920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SavePeptide(info);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00921"/>00921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00922"/>00922 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00923"/>00923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;GenerateCombinationsForX(<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_peptide">DBPeptide</link>&#32;info,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00924"/>00924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;char&gt;&#32;replacements)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00925"/>00925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00926"/>00926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<emphasis role="keywordtype">char</emphasis>&#32;aa&#32;<emphasis role="keywordflow">in</emphasis>&#32;ChemicalUtils.AminoAcids.Keys)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00927"/>00927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00928"/>00928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(aa&#32;!=&#32;<emphasis role="charliteral">&apos;^&apos;</emphasis>&#32;&amp;&amp;&#32;aa&#32;!=&#32;<emphasis role="charliteral">&apos;$&apos;</emphasis>&#32;&amp;&amp;&#32;aa&#32;!=&#32;<emphasis role="charliteral">&apos;J&apos;</emphasis>)
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00929"/>00929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00930"/>00930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;firstIndex&#32;=&#32;info.Sequence.IndexOf(<emphasis role="charliteral">&apos;X&apos;</emphasis>);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00931"/>00931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;changedPeptide&#32;=&#32;info.Sequence;
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00932"/>00932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;changedPeptide&#32;=&#32;changedPeptide.Insert(firstIndex,&#32;aa.ToString());
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00933"/>00933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;changedPeptide&#32;=&#32;changedPeptide.Remove(firstIndex&#32;+&#32;1,&#32;1);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00934"/>00934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//char[]&#32;temp&#32;=&#32;new&#32;char[replacements.Count];</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00935"/>00935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//replacements.CopyTo(temp);</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00936"/>00936 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00937"/>00937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;char&gt;&#32;currentReplacement&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;char&gt;(replacements.ToArray())
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00938"/>00938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00939"/>00939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[firstIndex]&#32;=&#32;aa
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00940"/>00940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00941"/>00941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//string&#32;currentReplacement&#32;=&#32;variableAAs&#32;+&#32;aa.ToString();</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00942"/>00942 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00943"/>00943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(changedPeptide.Contains(<emphasis role="charliteral">&apos;X&apos;</emphasis>))
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00944"/>00944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00945"/>00945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//should&#32;not&#32;occur</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00946"/>00946 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00947"/>00947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00948"/>00948 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00949"/>00949 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;newPep&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_d_b_peptide">DBPeptide</link>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00950"/>00950 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00951"/>00951 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MissedCleavages&#32;=&#32;info.MissedCleavages,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00952"/>00952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sequence&#32;=&#32;changedPeptide,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00953"/>00953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SequenceOriginal&#32;=&#32;info.SequenceOriginal,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00954"/>00954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ProteinStartFlag&#32;=&#32;info.ProteinStartFlag,
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00955"/>00955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DbProtRefs&#32;=&#32;info.DbProtRefs
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00956"/>00956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00957"/>00957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CalculateMass(newPep,&#32;currentReplacement);
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00958"/>00958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00959"/>00959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00960"/>00960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00961"/>00961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00962"/>00962 &#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00963"/>00963 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00964"/>00964 &#32;&#32;&#32;&#32;[MessagePackObject]
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00965"/><link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_digester_d_b">00965</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_digester_d_b">DigesterDB</link>
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00966"/>00966 &#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00967"/>00967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Key(0)]
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00968"/>00968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Dictionary&lt;int,&#32;List&lt;DBPeptide&gt;&gt;&#32;DbPeptidesDictMassKey&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00969"/>00969 
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00970"/>00970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_m_s_a_m_a_n_d_a___f_a_s_t_a_p_a_r_s_e_r_1_1_digester_d_b">DigesterDB</link>()
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00971"/>00971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00972"/>00972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DbPeptidesDictMassKey&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;int,&#32;List&lt;DBPeptide&gt;&gt;();
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00973"/>00973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00974"/>00974 &#32;&#32;&#32;&#32;}
<anchor xml:id="__f_a_s_t_a_parser_8cs_source_1l00975"/>00975 }
</programlisting></section>
