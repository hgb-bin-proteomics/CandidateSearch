<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__candidate_search_c_p_u_8cs_source" xml:lang="en-US">
<title>CandidateSearchCPU.cs</title>
<programlisting linenumbering="unnumbered"><anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_candidate_search_1_1util">CandidateSearch.util</link>;
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>System.Diagnostics;
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00003"/>00003 
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00004"/>00004 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_candidate_search">CandidateSearch</link>
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00005"/>00005 {
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>CandidateSearchCPU
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;{
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Search(<emphasis role="keywordtype">string</emphasis>&#32;spectraFile,&#32;<emphasis role="keywordtype">string</emphasis>&#32;databaseFile,&#32;<link linkend="_class_candidate_search_1_1util_1_1_settings">Settings</link>&#32;settings)
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;spectra&#32;=&#32;MGFReader.readMGF(spectraFile);
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Console.WriteLine($<emphasis role="stringliteral">&quot;Read&#32;{spectra.Count}&#32;spectra.&quot;</emphasis>);
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00021"/>00021 
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;peptides&#32;=&#32;DatabaseReader.readFASTA(databaseFile,&#32;settings,&#32;generateDecoys:&#32;settings.DECOY_SEARCH);
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Console.WriteLine($<emphasis role="stringliteral">&quot;Generated&#32;{peptides.Count}&#32;peptides&#32;from&#32;fasta&#32;file.&quot;</emphasis>);
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00024"/>00024 
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;generating&#32;the&#32;candidateValues&#32;and&#32;candidateIdx&#32;arrays</emphasis>
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;candidateValuesLength&#32;=&#32;0;
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;peptide&#32;<emphasis role="keywordflow">in</emphasis>&#32;peptides)
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;encoding&#32;=&#32;peptide.getEnconding();
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;candidateValuesLength&#32;+=&#32;encoding.Length;
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00032"/>00032 
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;candidateValues&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[candidateValuesLength];
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;candidateIdx&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[peptides.Count];
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00035"/>00035 
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;currentIdxCV&#32;=&#32;0;
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;currentIdxCI&#32;=&#32;0;
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;peptide&#32;<emphasis role="keywordflow">in</emphasis>&#32;peptides)
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;candidateIdx[currentIdxCI]&#32;=&#32;currentIdxCV;
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentIdxCI++;
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;encoding&#32;=&#32;peptide.getEnconding();
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;value&#32;<emphasis role="keywordflow">in</emphasis>&#32;encoding)
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;candidateValues[currentIdxCV]&#32;=&#32;value;
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentIdxCV++;
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00049"/>00049 
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;generating&#32;the&#32;spectraValues&#32;and&#32;spectraIdx&#32;arrays</emphasis>
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;spectraValuesLength&#32;=&#32;0;
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;spectrum&#32;<emphasis role="keywordflow">in</emphasis>&#32;spectra)
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;encoding&#32;=&#32;spectrum.getEncoding();
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spectraValuesLength&#32;+=&#32;encoding.Length;
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00057"/>00057 
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;spectraValues&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[spectraValuesLength];
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;spectraIdx&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[spectra.Count];
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00060"/>00060 
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;currentIdxSV&#32;=&#32;0;
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;currentIdxSI&#32;=&#32;0;
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;spectrum&#32;<emphasis role="keywordflow">in</emphasis>&#32;spectra)
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spectraIdx[currentIdxSI]&#32;=&#32;currentIdxSV;
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentIdxSI++;
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;encoding&#32;=&#32;spectrum.getEncoding();
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;value&#32;<emphasis role="keywordflow">in</emphasis>&#32;encoding)
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spectraValues[currentIdxSV]&#32;=&#32;value;
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentIdxSV++;
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00074"/>00074 
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;sw&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Stopwatch();
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sw.Start();
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00077"/>00077 
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;result&#32;=&#32;<link linkend="_namespace_vector_search_interface">VectorSearchInterface</link>.<link linkend="_class_vector_search_interface_1_1_vector_search_a_p_i">VectorSearchAPI</link>.<link linkend="_class_vector_search_interface_1_1_vector_search_a_p_i_1a590ce87e625ca1e73c5cd4dfdc4c5a19">searchCPU</link>(ref&#32;candidateValues,
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ref&#32;candidateIdx,
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ref&#32;spectraValues,
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ref&#32;spectraIdx,
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;topN:&#32;settings.TOP_N,
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tolerance:&#32;settings.TOLERANCE,
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalize:&#32;settings.NORMALIZE,
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;useGaussianTol:&#32;settings.USE_GAUSSIAN,
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;batched:&#32;settings.MODE&#32;==&#32;<emphasis role="stringliteral">&quot;CPU_DM&quot;</emphasis>&#32;||&#32;settings.MODE&#32;==&#32;<emphasis role="stringliteral">&quot;CPU_SM&quot;</emphasis>,
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;batchSize:&#32;100,
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;useSparse:&#32;settings.MODE&#32;==&#32;<emphasis role="stringliteral">&quot;CPU_SV&quot;</emphasis>&#32;||&#32;settings.MODE&#32;==&#32;<emphasis role="stringliteral">&quot;CPU_SM&quot;</emphasis>,
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cores:&#32;0,
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;verbose:&#32;1000,
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memStat:&#32;out&#32;int&#32;memStat);
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00092"/>00092 
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sw.Stop();
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00094"/>00094 
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Console.WriteLine($<emphasis role="stringliteral">&quot;CPU&#32;search&#32;finished&#32;with&#32;code&#32;{memStat}.&#32;Search&#32;took&#32;{sw.Elapsed.TotalSeconds}&#32;seconds.&quot;</emphasis>);
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00096"/>00096 
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;processedResult&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_candidate_search_1_1util_1_1_result">Result</link>(ref&#32;result,&#32;ref&#32;peptides,&#32;ref&#32;spectra,&#32;TopN:&#32;settings.TOP_N);
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;csvStat&#32;=&#32;processedResult.<link linkend="_class_candidate_search_1_1util_1_1_result_1ae88683cd96ea829e0b6f915bd0af4c7c">export</link>(spectraFile&#32;+&#32;<emphasis role="stringliteral">&quot;_results.csv&quot;</emphasis>);
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00099"/>00099 
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Console.WriteLine($<emphasis role="stringliteral">&quot;Result&#32;file&#32;written&#32;to&#32;disk&#32;with&#32;code&#32;{csvStat}.&#32;Search&#32;finished!&quot;</emphasis>);
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00101"/>00101 
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;}
<anchor xml:id="__candidate_search_c_p_u_8cs_source_1l00105"/>00105 }
</programlisting></section>
