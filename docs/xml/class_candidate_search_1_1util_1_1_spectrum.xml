<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_candidate_search_1_1util_1_1_spectrum" kind="class" language="C#" prot="public">
    <compoundname>CandidateSearch::util::Spectrum</compoundname>
    <sectiondef kind="property">
      <memberdef kind="property" id="class_candidate_search_1_1util_1_1_spectrum_1aeab26cbf516d8b21832f85fc176c445a" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>double[]</type>
        <definition>double [] CandidateSearch.util.Spectrum.mz</definition>
        <argsstring></argsstring>
        <name>mz</name>
        <qualifiedname>CandidateSearch.util.Spectrum.mz</qualifiedname>
        <briefdescription>
<para>Array containing m/z values of centroid peaks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util/Spectra.cs" line="11" column="23" bodyfile="util/Spectra.cs" bodystart="11" bodyend="11"/>
      </memberdef>
      <memberdef kind="property" id="class_candidate_search_1_1util_1_1_spectrum_1a1c8476c3d2d04b016291700b765cbbb1" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>double[]</type>
        <definition>double [] CandidateSearch.util.Spectrum.intensity</definition>
        <argsstring></argsstring>
        <name>intensity</name>
        <qualifiedname>CandidateSearch.util.Spectrum.intensity</qualifiedname>
        <briefdescription>
<para>Array containing intensities of centroid peaks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util/Spectra.cs" line="15" column="23" bodyfile="util/Spectra.cs" bodystart="15" bodyend="15"/>
      </memberdef>
      <memberdef kind="property" id="class_candidate_search_1_1util_1_1_spectrum_1a1ded92c30ea9b3b02890e9adbadf252a" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int CandidateSearch.util.Spectrum.scanNumber</definition>
        <argsstring></argsstring>
        <name>scanNumber</name>
        <qualifiedname>CandidateSearch.util.Spectrum.scanNumber</qualifiedname>
        <briefdescription>
<para>The scan number of the spectrum. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util/Spectra.cs" line="19" column="20" bodyfile="util/Spectra.cs" bodystart="19" bodyend="19"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_candidate_search_1_1util_1_1_spectrum_1a492ed6fab0fc563483b38dbbcd93c8cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CandidateSearch.util.Spectrum.Spectrum</definition>
        <argsstring>(double[] Mz, double[] Intensity, int ScanNumber)</argsstring>
        <name>Spectrum</name>
        <qualifiedname>CandidateSearch.util.Spectrum.Spectrum</qualifiedname>
        <param>
          <type>double[]</type>
          <declname>Mz</declname>
        </param>
        <param>
          <type>double[]</type>
          <declname>Intensity</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ScanNumber</declname>
        </param>
        <briefdescription>
<para>Constructor to create a new spectrum. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Mz</parametername>
</parameternamelist>
<parameterdescription>
<para>Array containing m/z values of centroid peaks.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Intensity</parametername>
</parameternamelist>
<parameterdescription>
<para>Array containing intensities of centroid peaks.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ScanNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>The scan number of the spectrum.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util/Spectra.cs" line="27" column="16" bodyfile="util/Spectra.cs" bodystart="27" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_candidate_search_1_1util_1_1_spectrum_1a2f41e1abc5af786703f14a97dd14976c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int[]</type>
        <definition>int[] CandidateSearch.util.Spectrum.getEncoding</definition>
        <argsstring>(int massRange=5000, int massMultiplier=100)</argsstring>
        <name>getEncoding</name>
        <qualifiedname>CandidateSearch.util.Spectrum.getEncoding</qualifiedname>
        <param>
          <type>int</type>
          <declname>massRange</declname>
          <defval>5000</defval>
        </param>
        <param>
          <type>int</type>
          <declname>massMultiplier</declname>
          <defval>100</defval>
        </param>
        <briefdescription>
<para>Get the encoding vector of the spectrum. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>massRange</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum m/z that should be considered while encoding. Has to match the specifications of VectorSearch.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>massMultiplier</parametername>
</parameternamelist>
<parameterdescription>
<para>Precision of the encoding. Has to match the specifications of VectorSearch.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The encoding vector as an integer array.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util/Spectra.cs" line="41" column="20" bodyfile="util/Spectra.cs" bodystart="41" bodyend="54"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Simplified spectrum class implemention of a mass spectrum. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="util/Spectra.cs" line="6" column="11" bodyfile="util/Spectra.cs" bodystart="7" bodyend="55"/>
    <listofallmembers>
      <member refid="class_candidate_search_1_1util_1_1_spectrum_1a2f41e1abc5af786703f14a97dd14976c" prot="public" virt="non-virtual"><scope>CandidateSearch::util::Spectrum</scope><name>getEncoding</name></member>
      <member refid="class_candidate_search_1_1util_1_1_spectrum_1a1c8476c3d2d04b016291700b765cbbb1" prot="public" virt="non-virtual"><scope>CandidateSearch::util::Spectrum</scope><name>intensity</name></member>
      <member refid="class_candidate_search_1_1util_1_1_spectrum_1aeab26cbf516d8b21832f85fc176c445a" prot="public" virt="non-virtual"><scope>CandidateSearch::util::Spectrum</scope><name>mz</name></member>
      <member refid="class_candidate_search_1_1util_1_1_spectrum_1a1ded92c30ea9b3b02890e9adbadf252a" prot="public" virt="non-virtual"><scope>CandidateSearch::util::Spectrum</scope><name>scanNumber</name></member>
      <member refid="class_candidate_search_1_1util_1_1_spectrum_1a492ed6fab0fc563483b38dbbcd93c8cc" prot="public" virt="non-virtual"><scope>CandidateSearch::util::Spectrum</scope><name>Spectrum</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
